name: Voice Conversations Data Sync

on:
  schedule:
    # Run every 12 hours at 1pm and 1am EST (6pm and 6am UTC)
    - cron: '0 18,6 * * *'
  # Allow manual triggering
  workflow_dispatch:

jobs:
  sync-voice-conversations:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests python-dotenv
        
    - name: Install Satori CLI
      run: |
        # Install Satori CLI
        echo "Installing Satori CLI..."
        curl -s https://satori.dev/install.sh | bash
        echo "Adding Satori to PATH..."
        echo "$HOME/.satori/bin" >> $GITHUB_PATH
        echo "PATH after adding Satori: $PATH"
        echo "Checking if Satori is installed..."
        ls -la $HOME/.satori/bin/
        echo "Testing Satori command..."
        $HOME/.satori/bin/satori --version
        
    - name: Configure Satori
      run: |
        # Set up Satori configuration
        mkdir -p ~/.satori
        echo "datastore: Redshift - Prod" > ~/.satori/config.yaml
        echo "database: pantheon" >> ~/.satori/config.yaml
        echo "schema: decagon_chat" >> ~/.satori/config.yaml
        
    - name: Authenticate with Satori
      run: |
        # Create Satori credentials file
        echo "Creating Satori credentials file..."
        cat > ~/.satori/credentials.json << EOF
        {
          "username": "${{ secrets.SATORI_USERNAME }}",
          "password": "${{ secrets.SATORI_PASSWORD }}",
          "expires_at": "2025-12-31T23:59:59.999Z"
        }
        EOF
        echo "Satori credentials file created"
        # Test authentication by listing datastores
        $HOME/.satori/bin/satori run psql --help
        
    - name: Set up environment variables
      run: |
        # Create environment file for the script
        echo "SATORI_DATASTORE=Redshift - Prod" >> $GITHUB_ENV
        echo "SATORI_DATABASE=pantheon" >> $GITHUB_ENV
        echo "SATORI_SCHEMA=decagon_chat" >> $GITHUB_ENV
        echo "WORKATO_WEBHOOK_URL=${{ secrets.WORKATO_WEBHOOK_URL }}" >> $GITHUB_ENV
        
    - name: Run voice conversations script
      run: |
        echo "Starting script execution..."
        echo "Current directory: $(pwd)"
        echo "Changing to decagon_voice/decagon_voice directory..."
        cd decagon_voice/decagon_voice
        echo "New directory: $(pwd)"
        echo "Files in directory:"
        ls -la
        echo "Checking Python version..."
        python3 --version
        echo "Checking if script file exists..."
        ls -la voice_conversations_warehouse_clean.py
        echo "Running Python script..."
        python3 voice_conversations_warehouse_clean.py
        echo "Script completed with exit code: $?"
        echo "Checking if JSON file was created..."
        ls -la *.json || echo "No JSON files found"
        
    - name: Upload results as artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: voice-conversations-results
        path: decagon_voice/decagon_voice/voice_conversations_warehouse.json
        retention-days: 7
